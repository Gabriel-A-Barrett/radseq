include { SAMTOOLS_INDEX as INDEX_MERGE_BAM } from '../../modules/nf-core/samtools/index/main.nf'
include { SAMTOOLS_MERGE as MERGE_BAM       } from '../../modules/nf-core/samtools/merge/main.nf'

workflow BAM_MERGE_INDEX_SAMTOOLS {
    take:
        bam // channel: [mandatory] meta, bam
        fasta
        fai

    main:
    ch_versions = Channel.empty()

    ch_bam_to_merge = bam.map { groupMetaREFID(it) }.groupTuple()

    MERGE_BAM(ch_bam_to_merge, fasta, fai)
    
    INDEX_MERGE_BAM(MERGE_BAM.out.bam)

    bam_bai = MERGE_BAM.out.bam
        .join(INDEX_MERGE_BAM.out.bai, by: [0])

    // Gather versions of all tools used
    ch_versions = ch_versions.mix(INDEX_MERGE_BAM.out.versions.first())
    ch_versions = ch_versions.mix(MERGE_BAM.out.versions.first())

    emit:
        bam_bai = bam_bai
        versions = ch_versions
}

def groupMetaREFID(ArrayList channel) {
        def meta = channel[0]
        def paths = channel[1]
        def metaf = [:] // initialize groovy map
        metaf.id =  meta.id.split(/[^\p{L}]/)[0] // set id splits at the first number appearance and retains items to the left
        metaf.single_end = meta.single_end
        metaf.ref_id = meta.ref_id

        [metaf, paths]
    }

